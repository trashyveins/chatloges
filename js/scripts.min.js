function useRegex(input) {
    let regex = /([01]\d|2[0-3]):[0-5]\d:[0-5]\d/;
    return regex.test(input);
}

$(document).ready(function () {
    function e() {
        $(".generated").remove(), $(".clear").remove();
        var text = $("textarea").val().replace("<script>", "").replace("</script>", "").split("\n");

        var insideMeAction = false;
        var insideWhisperAction = false;
        var insideLowAction = false;
        var insideCarWhisperAction = false;
        var insideMegafonAction = false;
        var insideWhiteAction = false;
        var insideGreyAction = false;
        var insideMoneyAction = false;
        var insideDeathAction = false;

        function resetAllStates() {
            insideMeAction = insideWhisperAction = insideLowAction = insideCarWhisperAction = insideMegafonAction = insideWhiteAction = insideGreyAction = insideMoneyAction = insideDeathAction = false;
        }

        for (var t = 0; t < text.length; t++) {
            var currentText = text[t];

            var wrappedText = wrapText(currentText, 115);

            for (var i = 0; i < wrappedText.length; i++) {
                var lineText = wrappedText[i];

                var cleanLineText = lineText.replace(/\[\d{2}:\d{2}:\d{2}\]\s*/, '');

                var $line = $('<div class="generated">' +
                    (useRegex(lineText) ? lineText.slice(11) : lineText) +
                    '</div>');

                if (cleanLineText.trim().startsWith("*") || cleanLineText.trim().startsWith(">")) {
                    resetAllStates();
                    insideMeAction = true;
                    $line.addClass("me");
                } else if (lineText.toLowerCase().includes(" whispers:")) {
                    resetAllStates();
                    insideWhisperAction = true;
                    $line.addClass("whisper");
                } else if (lineText.toLowerCase().includes(" whispers [low]:")) {
                    resetAllStates();
                    insideLowAction = true;
                    $line.addClass("low");
                } else if (lineText.toLowerCase().includes(" whispers [car whisper]:")) {
                    resetAllStates();
                    insideCarWhisperAction = true;
                    $line.addClass("carwhisper");
                } else if (lineText.toLowerCase().includes(" (cellphone)")) {
                    resetAllStates();
                    insideMegafonAction = true;
                    $line.addClass("megafon");
                } else if (lineText.toLowerCase().includes(" says:") || lineText.toLowerCase().includes("says (to")) {
                    resetAllStates();
                    insideWhiteAction = true;
                    $line.addClass("white");
                } else if (lineText.toLowerCase().includes(" says [low]:")) {
                    resetAllStates();
                    insideGreyAction = true;
                    $line.addClass("grey");
                } else if (lineText.toLowerCase().includes("you paid $") || lineText.toLowerCase().includes("you received") || lineText.toLowerCase().includes("you gave") || lineText.toLowerCase().includes("paid you $")) {
                    resetAllStates();
                    insideMoneyAction = true;
                    $line.addClass("money");
                } else if (lineText.toLowerCase().includes("you can die")) {
                    resetAllStates();
                    insideDeathAction = true;
                    $line.addClass("death");
                } else if (lineText.trim() === "") {
                    resetAllStates();
                } else {
                    if (insideMeAction) $line.addClass("me");
                    if (insideWhisperAction) $line.addClass("whisper");
                    if (insideLowAction) $line.addClass("low");
                    if (insideCarWhisperAction) $line.addClass("carwhisper");
                    if (insideMegafonAction) $line.addClass("megafon");
                    if (insideWhiteAction) $line.addClass("white");
                    if (insideGreyAction) $line.addClass("grey");
                    if (insideMoneyAction) $line.addClass("money");
                    if (insideDeathAction) $line.addClass("death");
                }

                if (lineText.toLowerCase().includes("has shown you their")) {
                    // Eliminar el timestamp si está presente
                    var cleanLineText = lineText.replace(/\[\d{2}:\d{2}:\d{2}\]\s*/, '');
                
                    // Dividir la línea en dos partes: antes y después de "their"
                    var parts = cleanLineText.split("has shown you their");
                
                    // Aplicar las clases correspondientes
                    $line.html(
                        '<span class="money">' + parts[0] + 'has shown you their</span>' +
                        '<span class="white">' + parts[1] + '</span>'
                    );
                     
                    resetAllStates();
                    insideWhiteAction = true;
                }

                $(".output").append($line).append('<div class="clear"></div>');

                // Manejar [!] y Chrome
                var txtString = $line.text();
                if (txtString.includes("[!]")) {
                    $line.html(txtString.replace("[!]", '<span style="color: #930972;">[!]</span>'));
                }
                if (navigator.userAgent.includes("Chrome")) {
                    $line.append(" ⠀");
                }
            }
        }

        $(".generated:empty").remove();
        $(".generated:first").css({"margin-top": "30px", "padding-top": "10px"});
        $(".generated:last").css({"margin-bottom": "30px", "padding-bottom": "10px"});
        $(".generated").css("background-color", "#" + $("#color-picker").spectrum("get").toHex());
    }

    function wrapText(text, maxLength) {
        var lines = [];
        while (text.length > maxLength) {
            var breakPoint = text.lastIndexOf(" ", maxLength);
            if (breakPoint === -1) {
                breakPoint = maxLength;
            }
            lines.push(text.slice(0, breakPoint));
            text = text.slice(breakPoint).trim();
        }
        lines.push(text);
        return lines;
    }

    charName = $("#name").val().toLowerCase();
    var t = $.jStorage.get("lastCharName");
    t || $.jStorage.set("lastCharName", ""),
    $("#name").val($.jStorage.get("lastCharName")),
    $("#name").bind("input propertychange", function () {
        (charName = $("#name").val().toLowerCase()),
        $.jStorage.set("lastCharName", charName),
        e();
    });

    var r = $.jStorage.get("lastFontSize"),
    o = $.jStorage.get("lastLineHeight");
    r || o
    ? ($(".output").css({
        "font-size": $.jStorage.get("lastFontSize") + "px",
        "line-height": $.jStorage.get("lastLineHeight") + "px",
    }),
    $("#font-label").text(
        "size (" + $.jStorage.get("lastFontSize") + "px):"
    ))
    : ($.jStorage.set("lastFontSize", "12"),
    $.jStorage.set("lastLineHeight", "0")),
    $("#decrease-fontsize").click(function () {
        (currentSize = parseInt($(".output").css("font-size"))),
        currentSize--,
        (currentLineHeight = parseInt($(".output").css("line-height"))),
        currentLineHeight--,
        currentLineHeight >= 0
        ? ($(".output").css({
            "font-size": currentSize + "px",
            "line-height": currentLineHeight + "px",
        }),
        $("#font-label").text("size (" + currentSize + "px):"),
        $.jStorage.set("lastFontSize", currentSize),
        $.jStorage.set("lastFontSize", currentLineHeight))
        : $(this).addClass("disabled");
    }),
    $("#increase-fontsize").click(function () {
        (currentSize = parseInt($(".output").css("font-size"))),
        currentSize++,
        (currentLineHeight = parseInt($(".output").css("line-height"))),
        currentLineHeight++,
        $(".output").css({
        "font-size": currentSize + "px",
        "line-height": currentLineHeight + "px",
        }),
        $("#font-label").text("size (" + currentSize + "px):"),
        $.jStorage.set("lastFontSize", currentSize),
        $.jStorage.set("lastLineHeight", currentLineHeight),
        $("#decrease-fontsize").removeClass("disabled");
    }),
    $("#reset-fontsize").click(function () {
        $(".output").css({ "font-size": "12px", "line-height": "0px" }),
        $("#font-label").text("size (12px):"),
        $.jStorage.set("lastFontSize", "12"),
        $.jStorage.set("lastLineHeight", "0");
    }),
    $("textarea").bind("input propertychange", function () {
        e();
    }),
    $("#color-picker").spectrum({
        color: "#000",
        showInput: !0,
        preferredFormat: "hex",
        change: function () {
            $.jStorage.set("lastColor", $("#color-picker").spectrum("get").toHex()),
            $(".generated").css(
                "background-color",
                "#" + $("#color-picker").spectrum("get").toHex()
            );
        },
    }),
    $("#color-picker").spectrum("set", $.jStorage.get("lastColor"));
});